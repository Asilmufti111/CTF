from Crypto.Util.number import inverse, long_to_bytes
import binascii

#prime num 1
p= 13320748866201356181344166184421375497515625622316425506199081642260132991766218637808281734634788900326296409095792329843375057734871609874138905359078279
#prime num 2
q=12586544580050654069851761426383855110824433050042398629881778466506902639279324122929784337688335994244229757862628435521142421664152251599853729381586747
n=p*q

#encryption key 
e=65537
#phi =(p-1)*(q-1)
#d= inverse(e,phi)
#decryption key 
d= 62578162879017853830660563082521971365342607056758283991897166652869268968888168009118202924611794330146233439030831919998733753664688913801556055028409982828860875451021890220425040859863493473806287464347848206762380343020116142209477531891891864739024221989238967412493437405671342666020751878164378277037

with open ('cipher.txt', 'rb') as file:
    hexadata=binascii.hexlify(file.read())

#cypher text
ct= int (hexadata,16)    
massage = pow (ct,d,n)

print (long_to_bytes(massage))

